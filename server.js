const express = require('express');
const path = require('path');
const fs = require('fs').promises;
const multer = require('multer');
const cors = require('cors');

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.static('public'));
app.use('/uploads', express.static('data/uploads'));

// ุชูููู multer ูุฑูุน ุงููููุงุช
const storage = multer.diskStorage({
  destination: async function (req, file, cb) {
    const uploadDir = 'data/uploads';
    try {
      await fs.access(uploadDir);
    } catch (error) {
      await fs.mkdir(uploadDir, { recursive: true });
    }
    cb(null, uploadDir);
  },
  filename: function (req, file, cb) {
    const uniqueName = Date.now() + '-' + Math.round(Math.random() * 1E9) + '-' + file.originalname;
    cb(null, uniqueName);
  }
});

const upload = multer({ 
  storage: storage,
  limits: {
    fileSize: 20 * 1024 * 1024 // 20MB ุญุฏ ุฃูุตู
  }
});

// ูุณุงุฑ ููู ุงูุจูุงูุงุช
const DATA_FILE = 'data/services.json';

// ูุธููุฉ ูุชุญููู ุงูุจูุงูุงุช
async function loadData() {
  try {
    await fs.access(DATA_FILE);
    const data = await fs.readFile(DATA_FILE, 'utf8');
    return JSON.parse(data);
  } catch (error) {
    // ุฅุฐุง ูู ููู ุงูููู ููุฌูุฏุงูุ ุชุฑุฌุน ุจูุงูุงุช ุงูุชุฑุงุถูุฉ
    const defaultData = {
      services: {
        schedule: { name: 'ุงูุฌุฏูู ุงูุฏุฑุงุณู', sections: [] },
        homework: { name: 'ุงููุงุฌุจุงุช', sections: [] },
        ai: { name: 'ุฑุจูุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู', sections: [] },
        broadcast: { name: 'ุงูุจุฑููุงุณุช', sections: [] },
        programs: { name: 'ุงูุจุฑุงูุฌ ูุงููุณุงุจูุงุช', sections: [] },
        files: { name: 'ุงููููุงุช ุงููุฑุณูุฉ', sections: [] },
        exams: { name: 'ุงูุงุฎุชุจุงุฑุงุช', sections: [] },
        contact: { name: 'ุชูุงุตู ูุนูุง', sections: [] }
      }
    };
    await saveData(defaultData);
    return defaultData;
  }
}

// ูุธููุฉ ูุญูุธ ุงูุจูุงูุงุช
async function saveData(data) {
  try {
    await fs.mkdir('data', { recursive: true });
    await fs.writeFile(DATA_FILE, JSON.stringify(data, null, 2));
    return true;
  } catch (error) {
    console.error('Error saving data:', error);
    return false;
  }
}

// ๐ฅ routes API

// ุฌูุจ ุฌููุน ุงูุจูุงูุงุช
app.get('/api/data', async (req, res) => {
  try {
    const data = await loadData();
    res.json(data);
  } catch (error) {
    console.error('Error loading data:', error);
    res.status(500).json({ error: 'ูุดู ูู ุชุญููู ุงูุจูุงูุงุช' });
  }
});

// ุญูุธ ุงูุจูุงูุงุช
app.post('/api/data', async (req, res) => {
  try {
    const { services } = req.body;
    const success = await saveData({ services });
    
    if (success) {
      res.json({ success: true, message: 'ุชู ุญูุธ ุงูุจูุงูุงุช ุจูุฌุงุญ' });
    } else {
      res.status(500).json({ success: false, error: 'ูุดู ูู ุญูุธ ุงูุจูุงูุงุช' });
    }
  } catch (error) {
    console.error('Error saving data:', error);
    res.status(500).json({ success: false, error: 'ูุดู ูู ุญูุธ ุงูุจูุงูุงุช' });
  }
});

// ุฑูุน ุงููููุงุช
app.post('/api/upload', upload.single('file'), async (req, res) => {
  try {
    if (!req.file) {
      return res.status(400).json({ success: false, error: 'ูู ูุชู ุงุฎุชูุงุฑ ููู' });
    }

    const fileUrl = `/uploads/${req.file.filename}`;
    res.json({
      success: true,
      url: fileUrl,
      filename: req.file.filename,
      originalName: req.file.originalname,
      size: req.file.size
    });
  } catch (error) {
    console.error('Error uploading file:', error);
    res.status(500).json({ success: false, error: 'ูุดู ูู ุฑูุน ุงูููู' });
  }
});

// ๐ฅ routes ุงูุชุทุจูู

// ุฎุฏูุฉ ุงูููุจ ุขุจ (ูุงุฌูุฉ ุงููุณุชุฎุฏู)
app.get('/webapp', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// ุฎุฏูุฉ ููุญุฉ ุงูุชุญูู
app.get('/admin', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'panel.html'));
});

// Route ุงูุชุฑุงุถู
app.get('/', (req, res) => {
  res.redirect('/admin');
});

// ุชุดุบูู ุงูุฎุงุฏู
app.listen(PORT, () => {
  console.log(`๐ ุงูุฎุงุฏู ูุนูู ุนูู http://localhost:${PORT}`);
  console.log(`๐ฑ ุงูููุจ ุขุจ: http://localhost:${PORT}/webapp`);
  console.log(`โ๏ธ  ููุญุฉ ุงูุชุญูู: http://localhost:${PORT}/admin`);
});