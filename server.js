const express = require('express');
const path = require('path');
const fs = require('fs').promises;
const multer = require('multer');
const cors = require('cors');

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.static('.'));

// ูุฌูุฏ ุงูุชุฎุฒูู ุนูู Render
const DATA_DIR = process.env.NODE_ENV === 'production' ? '/tmp/data' : './data';
const UPLOADS_DIR = path.join(DATA_DIR, 'uploads');

// ุชุฃูุฏ ูู ูุฌูุฏ ุงููุฌูุฏุงุช
async function ensureDirs() {
  try {
    await fs.mkdir(DATA_DIR, { recursive: true });
    await fs.mkdir(UPLOADS_DIR, { recursive: true });
    console.log('โ ุงููุฌูุฏุงุช ุฌุงูุฒุฉ');
  } catch (error) {
    console.log('๐ ุงููุฌูุฏุงุช ููุฌูุฏุฉ ุจุงููุนู');
  }
}

// ๐ฅ ุชูููู multer ูุน ุฏุนู ุงูุนุฑุจูุฉ
const storage = multer.diskStorage({
  destination: async function (req, file, cb) {
    await ensureDirs();
    cb(null, UPLOADS_DIR);
  },
  filename: function (req, file, cb) {
    // ุญู ูุดููุฉ ุงูุชุฑููุฒ ุงูุนุฑุจู - ุงุณุชุฎุฏุงู ุฃุณูุงุก ูุฑูุฏุฉ
    const fileExtension = path.extname(file.originalname);
    const uniqueName = Date.now() + '-' + Math.round(Math.random() * 1E9) + fileExtension;
    console.log('๐ค ุฑูุน ููู:', uniqueName);
    cb(null, uniqueName);
  }
});

const upload = multer({ 
  storage: storage,
  limits: {
    fileSize: 20 * 1024 * 1024 // 20MB
  },
  fileFilter: function (req, file, cb) {
    // ูุจูู ุฌููุน ุฃููุงุน ุงููููุงุช
    cb(null, true);
  }
});

// ูุณุงุฑ ููู ุงูุจูุงูุงุช
const DATA_FILE = path.join(DATA_DIR, 'services.json');

// ๐ฅ ูุธููุฉ ูุชุญููู ุงูุจูุงูุงุช
async function loadData() {
  try {
    await fs.access(DATA_FILE);
    const data = await fs.readFile(DATA_FILE, 'utf8');
    console.log('๐ฅ ุชู ุชุญููู ุงูุจูุงูุงุช ูู ุงูููู');
    return JSON.parse(data);
  } catch (error) {
    console.log('๐ ุฅูุดุงุก ุจูุงูุงุช ุงูุชุฑุงุถูุฉ');
    // ุจูุงูุงุช ุงูุชุฑุงุถูุฉ
    const defaultData = {
      services: {
        schedule: { 
          name: 'ุงูุฌุฏูู ุงูุฏุฑุงุณู', 
          sections: [
            {
              id: Date.now().toString(),
              name: 'ุงูุตู ุงูุฃูู',
              description: 'ุฌุฏูู ุงูุญุตุต ุงูุฃุณุจูุนู',
              type: 'mixed',
              content: [
                {
                  type: 'text',
                  title: 'ุฌุฏูู ูุฐุง ุงูุฃุณุจูุน',
                  content: 'ุงูุฃุญุฏ: ุฑูุงุถูุงุชุ ุนุฑุจู\nุงูุงุซููู: ุนูููุ ุฅูุฌููุฒู'
                }
              ]
            }
          ] 
        },
        homework: { name: 'ุงููุงุฌุจุงุช', sections: [] },
        ai: { name: 'ุฑุจูุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู', sections: [] },
        broadcast: { name: 'ุงูุจุฑููุงุณุช', sections: [] },
        programs: { name: 'ุงูุจุฑุงูุฌ ูุงููุณุงุจูุงุช', sections: [] },
        files: { name: 'ุงููููุงุช ุงููุฑุณูุฉ', sections: [] },
        exams: { name: 'ุงูุงุฎุชุจุงุฑุงุช', sections: [] },
        contact: { name: 'ุชูุงุตู ูุนูุง', sections: [] }
      }
    };
    await saveData(defaultData);
    return defaultData;
  }
}

// ๐ฅ ูุธููุฉ ูุญูุธ ุงูุจูุงูุงุช
async function saveData(data) {
  try {
    await fs.mkdir(DATA_DIR, { recursive: true });
    await fs.writeFile(DATA_FILE, JSON.stringify(data, null, 2));
    console.log('๐พ ุชู ุญูุธ ุงูุจูุงูุงุช ุจูุฌุงุญ');
    return true;
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุญูุธ ุงูุจูุงูุงุช:', error);
    return false;
  }
}

// ๐ฅ ๐ฅ ๐ฅ ุงูู API Routes ๐ฅ ๐ฅ ๐ฅ

// ุฌูุจ ุฌููุน ุงูุจูุงูุงุช
app.get('/api/data', async (req, res) => {
  try {
    console.log('๐ก ุทูุจ ุจูุงูุงุช ูู ุงูุฎุงุฏู');
    const data = await loadData();
    res.json(data);
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฌูุจ ุงูุจูุงูุงุช:', error);
    res.status(500).json({ 
      success: false, 
      error: 'ูุดู ูู ุชุญููู ุงูุจูุงูุงุช',
      details: error.message 
    });
  }
});

// ุญูุธ ุงูุจูุงูุงุช
app.post('/api/data', async (req, res) => {
  try {
    console.log('๐พ ุทูุจ ุญูุธ ุงูุจูุงูุงุช');
    const { services } = req.body;
    
    if (!services) {
      return res.status(400).json({ 
        success: false, 
        error: 'ุจูุงูุงุช ุบูุฑ ุตุงูุญุฉ' 
      });
    }
    
    const success = await saveData({ services });
    
    if (success) {
      res.json({ 
        success: true, 
        message: 'ุชู ุญูุธ ุงูุจูุงูุงุช ุจูุฌุงุญ' 
      });
    } else {
      res.status(500).json({ 
        success: false, 
        error: 'ูุดู ูู ุญูุธ ุงูุจูุงูุงุช' 
      });
    }
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุญูุธ ุงูุจูุงูุงุช:', error);
    res.status(500).json({ 
      success: false, 
      error: 'ูุดู ูู ุญูุธ ุงูุจูุงูุงุช',
      details: error.message 
    });
  }
});

// ๐ฅ ุฑูุน ุงููููุงุช
app.post('/api/upload', upload.single('file'), async (req, res) => {
  try {
    console.log('๐ค ุทูุจ ุฑูุน ููู');
    
    if (!req.file) {
      return res.status(400).json({ 
        success: false, 
        error: 'ูู ูุชู ุงุฎุชูุงุฑ ููู' 
      });
    }

    const fileUrl = `/uploads/${req.file.filename}`;
    
    console.log('โ ุชู ุฑูุน ุงูููู:', req.file.filename);
    
    res.json({
      success: true,
      url: fileUrl,
      filename: req.file.filename,
      originalName: req.file.originalname,
      size: req.file.size,
      message: 'ุชู ุฑูุน ุงูููู ุจูุฌุงุญ'
    });
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฑูุน ุงูููู:', error);
    res.status(500).json({ 
      success: false, 
      error: 'ูุดู ูู ุฑูุน ุงูููู',
      details: error.message 
    });
  }
});

// ๐ฅ ุฎุฏูุฉ ุงููููุงุช ุงููุฑููุนุฉ
app.use('/uploads', express.static(UPLOADS_DIR, {
  setHeaders: (res, path) => {
    // ุงูุณูุงุญ ุจุฌููุน ุฃููุงุน ุงููููุงุช
    res.set('Access-Control-Allow-Origin', '*');
  }
}));

// ๐ฅ Routes ุงูุชุทุจูู

// ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ - ุชูุฌูู ุฅูู ููุญุฉ ุงูุชุญูู
app.get('/', (req, res) => {
  res.redirect('/admin');
});

// ููุญุฉ ุงูุชุญูู
app.get('/admin', (req, res) => {
  console.log('๐ฅ๏ธ ุทูุจ ููุญุฉ ุงูุชุญูู');
  res.sendFile(path.join(__dirname, 'panel.html'));
});

// ุงูููุจ ุขุจ
app.get('/webapp', (req, res) => {
  console.log('๐ฑ ุทูุจ ุงูููุจ ุขุจ');
  res.sendFile(path.join(__dirname, 'index.html'));
});

// ๐ฅ ุตูุญุฉ ููุชุญูู ูู ุญุงูุฉ ุงูุฎุงุฏู
app.get('/status', (req, res) => {
  res.json({
    status: 'โ ุงูุฎุงุฏู ูุนูู',
    timestamp: new Date().toISOString(),
    routes: {
      admin: '/admin',
      webapp: '/webapp',
      api: '/api/data',
      uploads: '/uploads'
    }
  });
});

// ๐ฅ ูุนุงูุฌุฉ ุงููุณุงุฑุงุช ุบูุฑ ููุฌูุฏุฉ
app.use('*', (req, res) => {
  console.log('โ ูุณุงุฑ ุบูุฑ ููุฌูุฏ:', req.originalUrl);
  res.status(404).json({
    success: false,
    error: 'ูุณุงุฑ ุบูุฑ ููุฌูุฏ',
    path: req.originalUrl
  });
});

// ๐ฅ ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก ุงูุนุงูุฉ
app.use((error, req, res, next) => {
  console.error('๐ฅ ุฎุทุฃ ูู ุงูุฎุงุฏู:', error);
  res.status(500).json({
    success: false,
    error: 'ุฎุทุฃ ุฏุงุฎูู ูู ุงูุฎุงุฏู',
    message: error.message
  });
});

// ๐ฅ ุชููุฆุฉ ุงูุฎุงุฏู
async function initializeServer() {
  try {
    await ensureDirs();
    await loadData(); // ุชุฃูุฏ ูู ูุฌูุฏ ุงูุจูุงูุงุช
    
    app.listen(PORT, () => {
      console.log('\n๐ ===== ุงูุฎุงุฏู ูุนุงูู ุจูุฌุงุญ =====');
      console.log(`๐ ุงูุจูุฑุช: ${PORT}`);
      console.log(`๐ ููุญุฉ ุงูุชุญูู: http://localhost:${PORT}/admin`);
      console.log(`๐ฑ ุงูููุจ ุขุจ: http://localhost:${PORT}/webapp`);
      console.log(`๐ API ุงูุจูุงูุงุช: http://localhost:${PORT}/api/data`);
      console.log(`๐ ุงููููุงุช: http://localhost:${PORT}/uploads`);
      console.log(`๐ฉบ ุงูุญุงูุฉ: http://localhost:${PORT}/status`);
      console.log('================================\n');
    });
    
  } catch (error) {
    console.error('โ ูุดู ูู ุชููุฆุฉ ุงูุฎุงุฏู:', error);
    process.exit(1);
  }
}

// ุชุดุบูู ุงูุฎุงุฏู
initializeServer();

module.exports = app;
